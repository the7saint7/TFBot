# ---------- Discord Authentication ----------
# Bot token from https://discord.com/developers/applications
DISCORD_TOKEN=replace-with-your-token


# ---------- Core Behaviour ----------
# Chance (0.0-1.0) that any non-command message triggers a TF
TFBOT_CHANCE=0.10
# Comma-separated channel IDs to ignore when rolling for TF
TFBOT_IGNORE_CHANNELS=
# Command prefix for bot commands like !bg or !outfit
TFBOT_PREFIX=!
# Python logging level (DEBUG, INFO, WARNING, ...)
TFBOT_LOG_LEVEL=INFO
# Operating mode: `classic` for normal TF behaviour or `gacha` for the collection game
TFBOT_MODE=classic
# Channel that receives TF history snapshots
TFBOT_HISTORY_CHANNEL_ID=1432196317722972262
# Optional dev-history channel when bot runs in dev mode
TFBOT_HISTORY_DEV_CHANNEL_ID=1433105932392595609
# Optional override for the channel used by history snapshots
TFBOT_HISTORY_SNAPSHOT_CHANNEL=
# JSON file storing active TF state (auto-created)
TFBOT_STATE_FILE=tf_state.json
# JSON file storing lifetime TF statistics (auto-created)
TFBOT_STATS_FILE=tf_stats.json
# File recording the most recent VN reply snippets
TFBOT_REPLY_LOG=transform_replies.json
# Emoji name used to prefix TF narration (looked up per guild)
TFBOT_MAGIC_EMOJI_NAME=magic_emoji
# `classic` for embeds, `vn` for visual novel panels
TFBOT_MESSAGE_STYLE=vn
# Optional JSON dataset for character roster (defaults to tf_characters.py)
TFBOT_CHARACTERS_FILE=
# Base folder for avatar paths when using a custom dataset
TFBOT_AVATAR_ROOT=


# ---------- Visual Novel Panel Rendering ----------
# Base PNG panel for VN mode
TFBOT_VN_BASE=vn_assets/vn_base.png
# Optional single-font override for VN text
TFBOT_VN_FONT=
# Bold/regular/italic font overrides (set as needed)
TFBOT_VN_FONT_BOLD=fonts/Ubuntu-B.ttf
TFBOT_VN_FONT_REGULAR=fonts/Ubuntu-R.ttf
TFBOT_VN_FONT_ITALIC=fonts/Ubuntu-I.ttf
TFBOT_VN_FONT_BOLD_ITALIC=fonts/Ubuntu-BI.ttf
# Emoji fallback font (keep blank to skip)
TFBOT_VN_EMOJI_FONT=fonts/NotoEmoji-VariableFont_wght.ttf
# Student Transfer installation root (enables sprite composition)
TFBOT_VN_GAME_ROOT=
# Default outfit / face file when no selection is stored
TFBOT_VN_OUTFIT=casual.png
TFBOT_VN_FACE=0.png
# `game` to compose sprites, `user` to reuse the member avatar
TFBOT_VN_AVATAR_MODE=game
# Global scale factor applied before fitting into the avatar box
TFBOT_VN_AVATAR_SCALE=1.0
# Directory for cached composite sprites (empty string disables caching)
TFBOT_VN_CACHE_DIR=vn_cache
# JSON file storing per-character outfit selections
TFBOT_VN_SELECTIONS=tf_outfits.json
# Font sizes for VN nameplate and dialogue text
TFBOT_VN_NAME_SIZE=34
TFBOT_VN_TEXT_SIZE=26


# ---------- Background Selection ----------
# Root folder containing background images
TFBOT_VN_BG_ROOT=
# Default background path relative to the root
TFBOT_VN_BG_DEFAULT=school/cafeteria.png
# JSON file storing user background selections
TFBOT_VN_BG_SELECTIONS=tf_backgrounds.json


# ---------- Inanimate TF Events ----------
# JSON file describing inanimate TF entries
TFBOT_INANIMATE_FILE=tf_inanimate.json
# Chance (0.0-1.0) to pick an inanimate TF after a standard roll
TFBOT_INANIMATE_CHANCE=0.0


# ---------- Gacha Mode (optional) ----------
# Channel ID where the gacha conversation happens (required when TFBOT_MODE=gacha)
TFBOT_GACHA_CHANNEL_ID=
# Optional guild ID; when set, gacha commands only respond inside this server
TFBOT_GACHA_GUILD_ID=
# Path to the SQLite database storing gacha progress (auto-created if missing)
TFBOT_GACHA_DB_PATH=tfbot_gacha.sqlite3
# JSON file with rarity overrides and starter pools
TFBOT_GACHA_CONFIG=gacha_config.example.json
# Rudy coins granted to a player the first time they speak in the gacha channel
TFBOT_GACHA_STARTING_COINS=1200
# Rudy coins earned per eligible message (>= minimum word count)
TFBOT_GACHA_EARN_PER_MESSAGE=3
# Minimum number of words required to earn Rudy coins
TFBOT_GACHA_MIN_WORDS=3
# Cost in Rudy coins to roll a new character
TFBOT_GACHA_CHARACTER_ROLL_COST=350
# Cost in Rudy coins to roll an outfit for the equipped character
TFBOT_GACHA_OUTFIT_ROLL_COST=150
# Frog coins granted when rolling a duplicate character
TFBOT_GACHA_DUPLICATE_CHARACTER_FROG=2
# Frog coins granted when rolling a duplicate outfit
TFBOT_GACHA_DUPLICATE_OUTFIT_FROG=1
# Rudy coins received for each frog coin traded
TFBOT_GACHA_FROG_TO_RUDY_RATE=50
# Frog coins required to buy a rarity boost
TFBOT_GACHA_FROG_BOOST_COST=5
# Additional weight applied to rare/ultra drops during a boost (fractional, e.g. 0.15 = +15%)
TFBOT_GACHA_FROG_BOOST_BONUS=0.15
# Number of rolls the boost lasts
TFBOT_GACHA_FROG_BOOST_ROLLS=2


# ---------- AI Rewrite Settings (optional) ----------
# Enable GPT-based rewrites (true/false)
TFBOT_AI_REWRITE=false
# OpenAI key used when rewrites are enabled (TFBOT_AI_API_KEY or OPENAI_API_KEY)
TFBOT_AI_API_KEY=
# Chat model and tuning parameters
TFBOT_AI_MODEL=gpt-3.5-turbo-1106
TFBOT_AI_MAX_TOKENS=80
TFBOT_AI_TEMPERATURE=0.5
TFBOT_AI_TIMEOUT=2.0
TFBOT_AI_CONCURRENCY=1
TFBOT_AI_BACKOFF=1.5
TFBOT_AI_MIN_INTERVAL=0.75
# Optional custom system prompt for rewrites
TFBOT_AI_SYSTEM_PROMPT=
